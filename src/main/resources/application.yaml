server:
  forward-headers-strategy: NATIVE
  port: 8080
  servlet:
    context-path: /apiUser

spring:
  datasource:
    url: ${DB_URL:jdbc:mysql://localhost:3306/apiUser_service}
#    url: jdbc:mysql://13.231.241.149:3306/apiuser_service
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:root}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

  redis:
    host: ${HOST_REDIS:redis}
    port: 6379

  cache:
    type: redis
    redis:
      time-to-live: 3600000
      cache-null-values: false

  ai:
    openai:
      api-key: ${GEMINI_KEY}
      chat:
        base-url: ${OPENAI_BASE_URL:https://generativelanguage.googleapis.com}
        completions-path: ${OPENAI_COMPLETIONS_PATH:/v1beta/openai/chat/completions}
        options:
          model: gemini-2.5-flash

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${USER_NAME_MAIL}
    password: ${PASS_MAIL}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${CLIENT_ID}
            client-secret: ${CLIENT_SECRET}
            scope:
              - openid
              - email
              - profile

logging:
  level:
    org.springframework.security.oauth2.client: DEBUG
    com.example.ApiUser.service.authentication.users.CustomOAuth2UserService: INFO


jwt:
    signerKey: ${KEY_TOKEN}
